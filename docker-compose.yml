version: "3"

networks:
  mongodb-net:
    driver: bridge

services:
  configs1:
    container_name: configs1
    image: mongo
    command: mongod --configsvr --replSet cfgrs --port 27017 --dbpath /data/db --bind_ip_all
    volumes:
      - configs1:/data/db
    networks:
      - mongodb-net

  configs2:
    container_name: configs2
    image: mongo
    command: mongod --configsvr --replSet cfgrs --port 27017 --dbpath /data/db --bind_ip_all
    volumes:
      - configs2:/data/db
    networks:
      - mongodb-net

  configs3:
    container_name: configs3
    image: mongo
    command: mongod --configsvr --replSet cfgrs --port 27017 --dbpath /data/db --bind_ip_all
    volumes:
      - configs3:/data/db
    networks:
      - mongodb-net

  shard1s1:
    container_name: shard1s1
    image: mongo
    command: mongod --shardsvr --replSet shard1rs --port 27017 --dbpath /data/db --bind_ip_all
    volumes:
      - shard1s1:/data/db
    networks:
      - mongodb-net

  shard1s2:
    container_name: shard1s2
    image: mongo
    command: mongod --shardsvr --replSet shard1rs --port 27017 --dbpath /data/db --bind_ip_all
    volumes:
      - shard1s2:/data/db
    networks:
      - mongodb-net

  shard1s3:
    container_name: shard1s3
    image: mongo
    command: mongod --shardsvr --replSet shard1rs --port 27017 --dbpath /data/db --bind_ip_all
    volumes:
      - shard1s3:/data/db
    networks:
      - mongodb-net

  mongos:
    container_name: mongos
    image: mongo
    command: mongod --auth && eckongos --configdb cfgrs/configs1:27017,configs2:27017,configs3:27017 --port 27017 --bind_ip_all
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --port 27017'
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - 30000:27017
    networks:
      - mongodb-net

volumes:
  configs1: {}
  configs2: {}
  configs3: {}
  shard1s1: {}
  shard1s2: {}
  shard1s3: {}
